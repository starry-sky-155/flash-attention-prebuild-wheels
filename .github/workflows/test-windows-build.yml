name: "Test Windows build"
on:
  workflow_dispatch:

jobs:
  build_windows_wheels:
    name: Build wheels and Upload (Windows x86_64, GitHub hosted runner)
    runs-on: windows-latest
    env:
      MAX_JOBS: 2
      NVCC_THREADS: 2
    strategy:
      fail-fast: false
      matrix:
        flash-attn-version: ["2.8.2"]
        python-version: ["3.12"]
        torch-version: ["2.8.0"]
        cuda-version: ["12.8.1"]
    steps:
      - uses: actions/checkout@v4
      - name: Enable Git long paths
        shell: pwsh
        run: git config --system core.longpaths true

      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - uses: Jimver/cuda-toolkit@v0.2.24
        with:
          cuda: ${{ matrix.cuda-version }}
          method: "network"
          use-github-cache: false
          use-local-cache: false

      - name: Install VS2022 BuildTools
        shell: pwsh
        run: |
          choco install -y visualstudio2022buildtools `
            --version=117.14.1 `
            --params "--add Microsoft.VisualStudio.Component.VC.Tools.x86.x64"
          choco install -y windows-sdk-10.1 visualstudio2022-workload-vctools

      - name: Install build dependencies
        shell: pwsh
        run: |
          pip install -U pip setuptools==75.8.0 wheel setuptools packaging psutil ninja

      - name: Build wheels
        shell: pwsh
        run: |
          .\build_windows.ps1 -FlashAttnVersion "${{ matrix.flash-attn-version }}" -PythonVersion "${{ matrix.python-version }}" -TorchVersion "${{ matrix.torch-version }}" -CudaVersion "${{ matrix.cuda-version }}"
          $wheelName = Get-ChildItem -Path "flash-attention\dist\*.whl" | Select-Object -First 1 | ForEach-Object { $_.Name }
          echo "wheel_name=$wheelName" >> $env:GITHUB_ENV

      - name: Install Test
        shell: pwsh
        run: |
          pip install flash-attention/dist/$env:wheel_name
          python -c "import flash_attn; print(flash_attn.__version__)"
